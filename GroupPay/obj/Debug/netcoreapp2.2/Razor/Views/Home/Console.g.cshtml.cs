#pragma checksum "C:\Users\user\Documents\TJB\GroupPay\Views\Home\Console.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8858e80cd15c00fc5f480e91d26b37ffc4e961d4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Console), @"mvc.1.0.view", @"/Views/Home/Console.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Console.cshtml", typeof(AspNetCore.Views_Home_Console))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\user\Documents\TJB\GroupPay\Views\_ViewImports.cshtml"
using GroupPay;

#line default
#line hidden
#line 2 "C:\Users\user\Documents\TJB\GroupPay\Views\_ViewImports.cshtml"
using GroupPay.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8858e80cd15c00fc5f480e91d26b37ffc4e961d4", @"/Views/Home/Console.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b6c72eadc28a85792f13ff93682befbea288effa", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Console : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<GroupPay.Models.UserAccount>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_ConsoleHeader", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(36, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(38, 33, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "8858e80cd15c00fc5f480e91d26b37ffc4e961d43450", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(71, 5881, true);
            WriteLiteral(@"

<div class=""content"" id=""target""></div>
<script id=""ractiveTemplate"" type=""text/reactive"">
    <div class=""search-row"">
        <label>时间：</label>
        <input type=""text"" name=""startDate"" id=""startDate"" value=""{{startDate}}"" />
        <input type=""text"" name=""startTime"" id=""startTime"" value=""{{startTime}}"" />
        <label>至　</label>
        <input type=""text"" name=""endDate"" id=""endDate"" value=""{{endDate}}"" />
        <input type=""text"" name=""endTime"" id=""endTime"" value=""{{endTime}}"" />
        <input type=""submit"" name=""searchBtn"" value=""确定"" on-click=""doSearch"" />
        <input type=""button"" name=""order"" id=""order"" value=""申请下發"" on-click=""addorder""/>
    </div>
    <div style=""color:blue;padding:0 0 10px 0;"">{{message}}</div>
    <table class=""listTable"">
        <thead>
        <th>通道类型</th>
        <th>订单总数</th>
        <th>支付成功订单数</th>
        <th>成功率</th>
        </thead>
        <tbody>
            {{#each successRate}}
            <tr>
                <td>{{name}}</td>
");
            WriteLiteral(@"                <td>{{total}}</td>
                <td>{{success}}</td>
                <td>
                    {{#if total == 0}}
                    0%
                    {{else}}
                    {{success / total * 100}}%
                    {{/if}}
                </td>
            </tr>
            {{/each}}
        </tbody>
    </table>
    {{#if info}}
    <table class=""listTable colTable"">
        <tr>
            <td class=""title"" style=""width:200px"">商户号：</td>
            <td>{{info.appKey}}</td>
        </tr>
        <tr>
            <td class=""title"">密钥：</td>
            <td>{{info.appSecret}}</td>
        </tr>
        <tr>
            <td class=""title"">微信手续费：</td>
            <td>{{info.wechatRatio}}%</td>
        </tr>
        <tr>
            <td class=""title"">支付宝手续费：</td>
            <td>{{info.aliRatio}}%</td>
        </tr>
        <tr>
            <td class=""title"">银行卡手续费：</td>
            <td>{{info.bankRatio}}%</td>
        </tr>
        <tr>
     ");
            WriteLiteral(@"       <td class=""title"">API文件：</td>
            <td><a href=""/API.pdf"">点击下载</a></td>
        </tr>
    </table>
    {{/if}}
    <div class=""modal fade"" id=""addorderModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""confirmationModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""confirmationModalLabel"">申请下发</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <table class=""listTable colTable"">
                    <tr>
                        <td colspan=""3"">
                            <label>{{errorMessage}}</label>
                        </td>
                    </tr>
                    <tr>
                        <td class=""title"">银行名称：</td>
");
            WriteLiteral(@"                        <td><select id=""BankId"" name=""BankId"" value='{{BankId}}'>
                            <option value=""中国工商银行"">中国工商银行</option>
                            <option value=""中国农业银行"">中国农业银行</option>
                            <option value=""中国银行"">中国银行</option>
                            <option value=""中国建设银行"">中国建设银行</option>
                            <option value=""中国交通银行"">中国交通银行</option>
                            <option value=""中国招商银行"">中国招商银行</option>
                            <option value=""中信银行"">中信银行</option>
                            <option value=""中国民生银行"">中国民生银行</option>
                            <option value=""中国光大银行"">中国光大银行</option>
                            <option value=""中国平安银行"">中国平安银行</option>
                            <option value=""上海浦东发展银行"">上海浦东发展银行</option>
                            <option value=""中国邮政储蓄银行"">中国邮政储蓄银行</option>
                            <option value=""华夏银行"">华夏银行</option>
                            <option value=""兴业银行"">兴业银行</option");
            WriteLiteral(@">
                            <option value=""北京银行"">北京银行</option>
                            <option value=""上海银行"">上海银行</option>
                            <option value=""广东发展银行"">广东发展银行</option>
                            <option value=""厦门银行"">厦门银行</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td class=""title"">持卡人：</td>
                        <td><input type=""text"" name=""AccountOwner"" value=""{{AccountOwner}}"" /></td>
                    </tr>
                    <tr>
                        <td class=""title"">银行卡号：</td>
                        <td><input type=""text"" name=""AccountNumber"" value=""{{AccountNumber}}"" /></td>
                    </tr>
                    <tr>
                        <td class=""title"">下发金额：</td>
                        <td><input type=""text"" name=""Amount"" value=""{{Amount}}"" /></td>
                    </tr>
                    <tr>
                        <");
            WriteLiteral(@"td class=""title"">验证码：</td>
                        <td>
                            <input type=""text"" name=""captcha"" value=""{{captcha}}"" style=""width:190px"" autocomplete=""off"" />
                            <img src=""/Home/CaptchaImage"" id=""inputCaptchaImg"" on-click=""refreshCaptcha"" style=""width:100px; vertical-align:middle; height:33px;"" />
                        </td>
                    </tr>
                </table>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">取消</button>
                    <button type=""button"" class=""btn btn-primary"" on-click=""postorder"">确定</button>
                </div>
            </div>
        </div>
    </div>
</script>
");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(5969, 76, true);
                WriteLiteral("\n<script type=\"text/javascript\">\n\t$(document).ready(initConsole);\n</script>\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<GroupPay.Models.UserAccount> Html { get; private set; }
    }
}
#pragma warning restore 1591
