#pragma checksum "C:\Users\user\Documents\TJB\GroupPay\Views\Home\CollectChannel.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "34c6700ac0df0b5970433e85ac7781f01b6fefc7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_CollectChannel), @"mvc.1.0.view", @"/Views/Home/CollectChannel.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/CollectChannel.cshtml", typeof(AspNetCore.Views_Home_CollectChannel))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\user\Documents\TJB\GroupPay\Views\_ViewImports.cshtml"
using GroupPay;

#line default
#line hidden
#line 2 "C:\Users\user\Documents\TJB\GroupPay\Views\_ViewImports.cshtml"
using GroupPay.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"34c6700ac0df0b5970433e85ac7781f01b6fefc7", @"/Views/Home/CollectChannel.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b6c72eadc28a85792f13ff93682befbea288effa", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_CollectChannel : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_ConsoleHeader", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\user\Documents\TJB\GroupPay\Views\Home\CollectChannel.cshtml"
  
    ViewData["Title"] = "收款通道设置";

#line default
#line hidden
            BeginContext(42, 33, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "34c6700ac0df0b5970433e85ac7781f01b6fefc73528", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(75, 9365, true);
            WriteLiteral(@"

<div id=""target2""></div>
<div id=""target""></div>
<script id=""template2"" type=""text/ractive"">
    <div class=""card mt-2"">
        <div class=""card-header"">
            <h5>通道类型设置</h5>
        </div>
        <div class=""card-body"">
            <div class=""text-primary pb-2"">{{message}}</div>
            <table class=""table table-striped"">
                <thead>
                    <tr>
                        <th>通道编号</th>
                        <th>通道名称</th>
                        <th>通道利率(千分点)</th>
                        <th>每日收款上限</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each providers}}
                    <tr>
                        <td>{{channelProvider}}</td>
                        <td>{{#if channelProvider==1}}微信{{elseif channelProvider==2}}支付宝{{else}}银行卡{{/if}}</td>
                        <td>{{ratio}}‰</td>
                        <td>{{defaultDaliyLimit}}</td>
       ");
            WriteLiteral(@"                 <td>
                            <button type=""button"" class=""btn btn-secondary"" on-click=""updateProvider"">修改</button>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>

    <div class=""modal fade"" id=""providerErrorModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""errorModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""errorModalLabel"">{{errorTitle}}</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <h6>{{errorMsg}}</h6>
                </div>
                <div class=""modal-");
            WriteLiteral(@"footer"">
                    <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">确定</button>
                </div>
            </div>
        </div>
    </div>

    <div class=""modal fade"" id=""providerSettingModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""providerSettingModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"">通道设置</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <form>
                        <div class=""form-group"">
                            <label for=""settingName"">通道名称</label>
                            <input type=""text"" style=""width:100%"" value=""{{#if channelProvider==");
            WriteLiteral(@"1}}微信{{elseif channelProvider==2}}支付宝{{else}}银行卡{{/if}}"" class=""form-control"" disabled=""disabled"" />
                        </div>
                        <div class=""form-group"">
                            <label for=""channelRatio"">通道利率(千分点)</label>
                            <input type=""number"" id=""channelRatio"" style=""width:100%"" value=""{{ratio}}"" class=""form-control"" placeholder=""设置值"" />
                        </div>
                        <div class=""form-group"">
                            <label for=""channelDaliyLimit"">每日收款上限</label>
                            <input type=""number"" id=""DaliyLimit"" style=""width:100%"" value=""{{defaultDaliyLimit}}"" class=""form-control"" placeholder=""设置值"" />
                        </div>
                    </form>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">取消</button>
                    <button type=""button"" class=""btn btn-primary"" on-click=");
            WriteLiteral(@"""doOperation"">确定</button>
                </div>
            </div>
        </div>
    </div>
</script>
<script id=""template"" type=""text/ractive"">
    <div class=""card mt-2"">
        <div class=""card-header"">
            <h5>收款通道设置</h5>
        </div>
        <div class=""card-body"">
            <div class=""text-primary pb-2"">{{message}}</div>
            <table class=""table table-striped"">
                <thead>
                    <tr>
                        <th>通道編號</th>
                        <th>通道名称</th>
                        <th>通道類型</th>
                        <th>通道利率(千分点)</th>
                        <th>支付码有效时间</th>
                        <th>开启状态</th>
                        <th>实例上限</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each channels}}
                    <tr>
                        <td>{{id}}</td>
                        <td>{{name}}</td>
                        <td>{{#if channelProvider==1}}微信{");
            WriteLiteral(@"{elseif channelProvider==2}}支付宝{{else}}银行卡{{/if}}</td>
                        <td>{{ratio}}‰</td>
                        <td>{{validTime}}分</td>
                        <td>{{#if enabled}}开启{{else}}关闭{{/if}}</td>
                        <td>{{instrumentsLimit}}</td>
                        <td>
                            <button type=""button"" class=""btn btn-secondary"" on-click=""updateChannels"">修改</button>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>
    <div class=""modal fade"" id=""errorModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""errorModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""errorModalLabel"">{{errorTitle}}</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""C");
            WriteLiteral(@"lose"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <h6>{{errorMsg}}</h6>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">确定</button>
                </div>
            </div>
        </div>
    </div>

    <div class=""modal fade"" id=""settingModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""settingModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"">通道设置</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""");
            WriteLiteral(@"modal-body"">
                    <form>
                        <div class=""form-group"">
                            <label for=""settingName"">通道名称</label>
                            <input type=""text"" id=""channelName"" style=""width:100%"" value=""{{name}}"" class=""form-control"" placeholder=""设置值"" />
                        </div>
                        <div class=""form-group"">
                            <label for=""settingName"">通道类型</label>
                            <select id=""channelProvider"">
                                <option value=""1"" {{#if channelProvider==1}} selected{{/if}}>微信</option>
                                <option value=""2"" {{#if channelProvider==2}} selected{{/if}}>支付宝</option>
                                <option value=""3"" {{#if channelProvider==3}} selected{{/if}}>银行卡</option>
                            </select>
                        </div>
                        <div class=""form-group"">
                            <label for=""validTime"">支付码有效时间(分)</label>
  ");
            WriteLiteral(@"                          <input type=""number"" id=""validTime"" style=""width:100%"" value=""{{validTime}}"" class=""form-control"" placeholder=""设置值"" />
                        </div>
                        <div class=""form-group"">
                            <div class=""checkbox"">
                                <label for=""channelStatus""><input type=""checkbox"" id=""channelStatus"" checked=""{{enabled}}"">开启</label>
                            </div>
                        </div>
                        <div class=""form-group"">
                            <label for=""channelSize"">实例上限</label>
                            <input type=""number"" id=""channelSize"" style=""width:100%"" value=""{{instrumentsLimit}}"" class=""form-control"" placeholder=""设置值"" />
                        </div>
                    </form>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">取消</button>
                    <button type=""bu");
            WriteLiteral("tton\" class=\"btn btn-primary\" on-click=\"doOperation\">确定</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</script>\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(9457, 168, true);
                WriteLiteral("\r\n    <script type=\"text/javascript\">\r\n        $(document).ready(initChannelSettingsPage);\r\n        $(document).ready(initChannelProviderSettingsPage);\r\n    </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
