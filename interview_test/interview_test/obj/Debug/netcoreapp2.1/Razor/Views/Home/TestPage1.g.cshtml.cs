#pragma checksum "D:\asp\interview_test\interview_test\Views\Home\TestPage1.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "049b28aa37ac766c4b33a3d2194665b49691ca12"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_TestPage1), @"mvc.1.0.view", @"/Views/Home/TestPage1.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/TestPage1.cshtml", typeof(AspNetCore.Views_Home_TestPage1))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\asp\interview_test\interview_test\Views\_ViewImports.cshtml"
using interview_test;

#line default
#line hidden
#line 2 "D:\asp\interview_test\interview_test\Views\_ViewImports.cshtml"
using interview_test.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"049b28aa37ac766c4b33a3d2194665b49691ca12", @"/Views/Home/TestPage1.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f611a4847064450c67af4483f8b135a0426a7555", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_TestPage1 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\asp\interview_test\interview_test\Views\Home\TestPage1.cshtml"
  
    ViewData["Title"] = "奕智博";

#line default
#line hidden
            BeginContext(39, 4499, true);
            WriteLiteral(@"<h1>面試題目</h1>
<hr>

<div class=""content"" id=""target""></div>
<script id=""ractiveTemplate"" type=""text/reactive"">
    <div id=""choice"">
        {{#each  data:i}}
        {{#if type == 1}}
        <div style=""margin:20px 0;background-color: aliceblue"">
            <div style=""padding:5px 10px;"">
                <h4>第{{i+1}}題</h4>
                <pre style=""background-color: #f0f0f0"">{{topic}}</pre>
            </div>
            <div style=""padding:5px 20px"">
                <label><input type=""radio"" name=""{{testanswer[i]}}"" value=""A""> A.{{a}}</label><br>
                <label><input type=""radio"" name=""{{testanswer[i]}}"" value=""B""> B.{{b}}</label><br>
                <label><input type=""radio"" name=""{{testanswer[i]}}"" value=""C""> C.{{c}}</label><br>
                <label><input type=""radio"" name=""{{testanswer[i]}}"" value=""D""> D.{{d}}</label>
            </div>
        </div>
        {{/if}}
        {{/each}}
        {{message}}
        <button class=""btn btn-primary"" on-click=""next"">下一頁<");
            WriteLiteral(@"/button>
    </div>

    <div id=""short"" style=""display:none"">
        {{#each  data:i}}
        {{#if type == 2}}
        <div style=""margin:20px 0;background-color: aliceblue"">
            <div style=""padding:5px 10px;"">
                <h4>第{{i+1}}題</h4>
                <pre style=""background-color: #f0f0f0"">{{topic}}</pre>
            </div>
            <div style=""padding:5px 20px"">
                <textarea rows=""8"" style=""width:100%"">{{testanswer[i]}}</textarea>
            </div>
        </div>
        {{/if}}
        {{/each}}
        {{message}}
        <button class=""btn btn-primary"" on-click=""previous"">上一頁</button>
        <button class=""btn btn-danger"" on-click=""completely"">作答完成</button>
    </div>
</script>
<script>
    var SetMinute = 0;
    function Check_Time() {
        SetMinute += 1;
        var Check_i = document.getElementById(""Check_i"");

        var Cal_Minute = Math.floor(Math.floor(SetMinute % 3600) / 60);
        var Cal_Second = SetMinute % 60;

     ");
            WriteLiteral(@"   Check_i.innerHTML = Cal_Minute + ""分"" + Cal_Second + ""秒"";
    }
    var settimer = window.setInterval(""Check_Time()"", 1000);

    var ractive = new Ractive({
        target: ""#target"",
        template: ""#ractiveTemplate"",
        data: {
            message: '',
            data:'',
            testanswer:[]
        },
        on: {
            next: function (ctx) {
                $('#choice').hide();
                $('#short').show();
                $('html,body').animate({ scrollTop: 0 }, 'slow');
            },
            previous: function (ctx) {
                $('#choice').show();
                $('#short').hide();
                $('html,body').animate({ scrollTop: 0 }, 'slow');
            },
            completely: function (ctx) {
                var name = decodeURIComponent(window.location.search.substring(8));
                var json = { NAME: name ,ANSWER: this.get(""testanswer"").join(), TESTTIME: SetMinute };
                console.log(json.ANSWER.split("","")");
            WriteLiteral(@");
                $.ajax({
                        url: '/api/InterviewTest',
                        type: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        data: JSON.stringify(json),
                        context: this,
                        dataType: 'json'
                })
                .done(function (data) {

                })
                .fail(function (xhr, status) {
                        
                });
                clearInterval(settimer);
                window.location = '/home/finishpage';
            }
        },
        oncomplete: function () {
            this._loadData();
        },
        _loadData: function () {
            this.set('message', '載入中請稍等');
            $.ajax({
                url: '/api/InterviewTest',
                type: 'GET',
                context: this,
                dataType: 'json'
            }).done(");
            WriteLiteral(@"function (data) {
                if (data == '') {
                    this.set('message', '資料出錯' + data.error);
                } else {
                    this.set('data', data);
                    this.set('message', '');
                }
            }).fail(function (xhr, status) {
                this.set('message', '加载有誤:' + status);
            });
        }
    });
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
