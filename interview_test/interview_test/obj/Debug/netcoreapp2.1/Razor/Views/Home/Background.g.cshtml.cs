#pragma checksum "D:\asp\interview_test\interview_test\Views\Home\Background.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ca64926c148d7bf8b152f28bb208fca9b17a9900"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Background), @"mvc.1.0.view", @"/Views/Home/Background.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Background.cshtml", typeof(AspNetCore.Views_Home_Background))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\asp\interview_test\interview_test\Views\_ViewImports.cshtml"
using interview_test;

#line default
#line hidden
#line 2 "D:\asp\interview_test\interview_test\Views\_ViewImports.cshtml"
using interview_test.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ca64926c148d7bf8b152f28bb208fca9b17a9900", @"/Views/Home/Background.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f611a4847064450c67af4483f8b135a0426a7555", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Background : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\asp\interview_test\interview_test\Views\Home\Background.cshtml"
  
    ViewData["Title"] = "後台";

#line default
#line hidden
            BeginContext(38, 5324, true);
            WriteLiteral(@"<div class=""content"" id=""target""></div>
<script id=""ractiveTemplate"" type=""text/reactive"">
    {{message}}
    <div id=""interviewList"" style=""padding-top:100px"">
        <table class=""table table-hover"">
            <thead>
                <tr>
                    <th scope=""col"">#</th>
                    <th scope=""col"">姓名</th>
                    <th scope=""col"">作答時間/分</th>
                    <th scope=""col"">日期</th>
                    <th scope=""col"">狀態</th>
                    <th scope=""col"">備註</th>
                </tr>
            </thead>
            <tbody>
                {{#each data:i}}
                <tr on-click=""correct"">
                    <th scope=""row"">{{id}}</th>
                    <td>{{name}}</td>
                    <td>{{test_time}}</td>
                    <td>{{timestamp}}</td>
                    <td>{{status == 0 ? '未改':'已改'}}</td>
                    <td>{{note}}</td>
                </tr>
                {{/each}}
            </tbody>
        </tab");
            WriteLiteral(@"le>
    </div>

    <div id=""interviewEdit"" style=""padding-top:100px;display:none"">
        <div class=""alert alert-info"" role=""alert"">
            <h3 class=""display-3"">{{data[count].name}}</h3>
            <p class=""lead"">測驗耗時:{{data[count].test_time}}</p>
            <p class=""lead"">分數:{{data[count].score == ''? '尚未批改': data[count].score}}</p>
            <hr class=""my-4"">
            <p>狀態:{{data[count].status == 0 ? '尚未批改':'已改'}}</p>
            <p>作答日期:{{data[count].timestamp}}</p>
            <p>備註:{{data[count].note}}</p>
        </div>

        <div class=""panel panel-default"" style=""margin-bottom:20px;"">
            <div class=""panel-heading"">
                <h4 class=""panel-title"">
                    <button class=""btn btn-info"" data-toggle=""collapse"" data-parent=""#accordion"" href=""#choice""> 選擇題 </button>
                    <button class=""btn btn-info"" data-toggle=""collapse"" data-parent=""#accordion"" href=""#short""> 簡答題 </button>
                </h4>
            </div>
      ");
            WriteLiteral(@"      <div id=""short"" class=""collapse"">
                {{#each testdata:i}}
                {{#if type == 2}}
                <div style=""padding:20px; background-color: #f0f0f0"">
                    <pre>{{topic}}</pre>
                    <div class=""alert alert-success"">ANSWER:<br>{{answer}}</div>
                    <div class=""alert"" style=""background-color:#e8d1d1"">Interviewee:<br />{{interviewdata[i]}}</div>
                </div>
                {{/if}}
                {{/each}}
            </div>
        </div>
        <div class=""input-group mb-3"">
            <div class=""input-group-prepend"">
                <span class=""input-group-text"" id=""inputGroup-sizing-default"">Default</span>
            </div>
            <input type=""text"" class=""form-control"" aria-label=""Default"" aria-describedby=""inputGroup-sizing-default"">
        </div>
        <button class=""btn btn-primary"" on-click=""back"">返回</button>
        <button class=""btn btn-danger"" on-click=""edit"">批改完成</button>
    </div");
            WriteLiteral(@">

</script>

<script>
    var ractive = new Ractive({
        target: ""#target"",
        template: ""#ractiveTemplate"",
        data: {
            accountName: '',
            message: '',
            data: '',
            testdata: '',
            interviewdata:[],
            count:''
        },
        on: {
            correct: function (ctx) {
                var id = ctx.get(""id"");
                var interviewdata = this.get(""data"");
                this.set('count', id - 1);
                this.set('interviewdata', interviewdata[id - 1].answer.split("",""));
                console.log(interviewdata[id - 1].answer.split("",""));
                $.ajax({
                url: '/api/InterviewTest',
                type: 'GET',
                context: this,
                dataType: 'json'
                }).done(function (data) {
                    if (data == '') {
                        this.set('message', '資料出錯');
                    } else {
                        th");
            WriteLiteral(@"is.set('testdata', data);
                        this.set('message', '');
                    }
                }).fail(function (xhr, status) {
                    this.set('message', '加载有誤:' + status);
                });
                $('#interviewList').hide();
                $('#interviewEdit').show();
            },
            back: function (ctx) {
                $('#interviewList').show();
                $('#interviewEdit').hide();
            }
        },
        oncomplete: function () {
            this._loadData();
        },
        _loadData: function () {
            this.set('message', '載入中請稍等');
            $.ajax({
                url: '/api/Background',
                type: 'GET',
                context: this,
                dataType: 'json'
            }).done(function (data) {
                if (data == '') {
                    this.set('message', '資料出錯' + data.error);
                } else {
                    this.set('data', data);
           ");
            WriteLiteral("         this.set(\'message\', \'\');\r\n                }\r\n            }).fail(function (xhr, status) {\r\n                this.set(\'message\', \'加载有誤:\' + status);\r\n            });\r\n        }\r\n    });\r\n</script>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
